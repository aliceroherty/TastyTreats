@model TastyTreats.Model.Entities.Review

@{
    ViewBag.Title = "Add a Review";
}

<h2>Add a Review</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Review</h4>
        <hr />
        @if (Model.Errors.Count > 0)
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var e in Model.Errors.Where(e => e.Type == Types.ErrorType.Business))
                    {
                        <li>@e.ErrorDescription</li>
                    }
                </ul>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stars, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stars, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stars, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    @Html.HiddenFor(model => model.RecipeID)
}

<div>
    @Html.ActionLink("Back to Recipe Details", "Details", "Recipes", new { id = Model.RecipeID }, new { })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
